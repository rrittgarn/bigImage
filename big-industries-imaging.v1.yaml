openapi: 3.0.0
info:
  title: Big Industries Imaging - Api Powered by Stoplight
  version: '1.0'
  contact:
    name: Ryan Rittgarn
    url: www.bigindustries.com/help
    email: ryan@bigindustries.com
  termsOfService: api.bigindustries.com/tos.html
  description: 'Big Industries - Imaging API. For use with our on-site customer imaging platform. '
servers:
  - url: 'http://api.bigindustries.com/v1'
    description: API
paths:
  /login:
    post:
      summary: Login
      tags:
        - Authentication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  availableModules:
                    type: array
                    items:
                      type: string
                  userData:
                    $ref: '#/components/schemas/User'
              examples:
                User Login:
                  value:
                    token: d514c63de975fc243b2eaf6ccf776dc4
                    availableModules:
                      - imaging
                      - planning
                      - purchasing
                    userData:
                      id: 102
                      fullName: Tom Petty
                      title: Purchasing
                      contactNumber: 800-867-5309
                      securityRole: 22
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  errorID:
                    type: integer
              examples:
                Bad Username or Password:
                  value:
                    error: Bad Username or Password
                    errorId: 1001
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  errorID:
                    type: integer
              examples:
                Server Error:
                  value:
                    error: Serverside Error has occurred. Please contact support with ID 1002
                    errorID: 1002
      operationId: post-v1-login
      description: 'Login process to get user token that will be used for all subsequent requests. '
      parameters:
        - schema:
            type: string
            pattern: /@/
          in: query
          name: email
          description: Fully Qualified Email Address
          required: true
        - schema:
            type: string
          in: query
          name: password
          description: Password
          required: true
    parameters: []
  /toolimage:
    post:
      summary: Add new captured tool
      operationId: post-v1-toolimage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 'Should always match the http response code. '
                  bigToolID:
                    type: integer
                    description: 'Big Industries internal id for this new tool '
              examples:
                New Tool Success:
                  value:
                    status: 200
                    bigToolID: 202
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  errorID:
                    type: integer
                  errorDescription:
                    type: string
      description: 'Store a tool image in the Big Industries tool API. System automatically creates a vector and stores relevant information with the objects. '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Brand:
                  type: string
                UPC:
                  type: string
                isSet:
                  type: boolean
                Description:
                  type: string
                Category:
                  type: string
                Unit:
                  description: Autogenerated Upon Insert
                  type: string
                toolThickness:
                  type: string
                DisplaySVG:
                  type: string
                CutSVG:
                  type: string
            examples:
              example-1:
                value:
                  Brand: string
                  UPC: string
                  isSet: true
                  Description: string
                  Category: string
                  Unit: string
                  toolThickness: string
                  DisplaySVG: string
                  CutSVG: string
          multipart/form-data:
            schema:
              type: object
              properties:
                capturedImage: {}
            examples:
              ImageData:
                value:
                  capturedImage: filename.png
        description: |-
          Body should include as much information as possible. 

          form-data is expecting an image file (svg) and the accompanying json file. This matches current scanner output. 
      tags:
        - Tool Imaging
    parameters: []
  '/layout/gettool/{toolID}':
    parameters:
      - schema:
          type: string
        name: toolID
        in: path
        required: true
    get:
      summary: Get individual tool by ID
      tags:
        - Layout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-layout-gettool-toolID
      description: 'Will return the tool SVG-ID, as well as the details regarding the tool. '
      security:
        - Bearer Token: []
  /layout/gettool:
    get:
      summary: Get all tools available
      tags:
        - Layout
      responses:
        '200':
          description: OK
      operationId: get-laout-gettool
      description: Returns all tools available to the user paginated by preference
      security:
        - Bearer Token: []
    parameters: []
  /layout/savelayout:
    post:
      summary: Save Layout
      operationId: post-layout-savelayout
      responses:
        '200':
          description: OK
      tags:
        - Layout
      description: 'Saves all of the current IDs and their positions / rotation on the layout. '
      security:
        - Bearer Token: []
  /layout/getsaved:
    get:
      summary: Get saved layouts
      tags:
        - Layout
      responses:
        '200':
          description: OK
      operationId: get-layout-getsaved
      security:
        - Bearer Token: []
      description: 'Returns a list of saved layouts and their last modified dates. '
  '/layout/getsaved/{layoutID}':
    parameters:
      - schema:
          type: string
        name: layoutID
        in: path
        required: true
    get:
      summary: Get saved layout by ID
      tags:
        - Layout
      responses:
        '200':
          description: OK
      operationId: get-layout-getsaved-layoutID
      security:
        - Bearer Token: []
      description: 'Returns the full layout with positional data. '
  '/toolimage/{toolID}':
    parameters:
      - schema:
          type: string
        name: toolID
        in: path
        required: true
    get:
      summary: Get specific tool by ID
      tags:
        - Tool Imaging
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tool'
              examples:
                Small Screwdriver:
                  value:
                    _id:
                      $oid: 5f714af2668a68303229bd72
                    Brand: SK
                    UPC: '85310'
                    isSet: false
                    Description: Small Screwdriver
                    Category: Screwdrivers & Nut Drivers
                    Unit: NA
                    toolThickness: '1.125'
                    DisplaySVG: "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"3.78881in\" height=\"1.16011in\" viewBox=\"0 0 272.7943 83.52779\">\r\n </svg>\r\n"
                    CutSVG: "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"3.78881in\" height=\"1.16011in\" viewBox=\"0 0 272.7943 83.52779\">\r\n </svg>\r\n"
                    importDate: 1601766752
        '403':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  reason:
                    type: string
              examples:
                Forbidden:
                  value:
                    status: '403'
                    reason: Unauthorized access or tool not found. This event has been logged.
      operationId: get-toolimage-toolID
      description: Expects the UID of the tool in question (_id field value). Provides single tool details
      parameters: []
  CORS:
    options:
      summary: HTML Options (CORS)
      operationId: optionsv1
      responses:
        '204':
          description: CORS response will allow our internal domains
          headers:
            'Access-Control-Allow-Origin: *.cfpsecure.com':
              schema:
                type: string
            'Access-Control-Allow-Methods: GET, POST, PATCH, PUT, DELETE, OPTIONS':
              schema:
                type: string
            'Access-Control-Allow-Headers: Origin, Content-Type, X-Auth-Token':
              schema:
                type: string
            'Cache-Control: max-age=86400':
              schema:
                type: string
            'Access-Control-Max-Age: 86400':
              schema:
                type: string
      parameters: []
      description: 'CORS Options response, will respond on any sub-endpoint below /v1/ '
      tags:
        - Authentication
    parameters: []
  /toolimage/all:
    get:
      summary: Get all available tool images
      tags:
        - Tool Imaging
      responses:
        '200':
          description: OK
      operationId: get-toolimage-all
      description: 'Returns all tools visible to user '
  /drawer:
    post:
      summary: Create a new drawer
      operationId: post-drawer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                  newDrawerID:
                    type: string
              examples:
                Single Drawer:
                  value:
                    description: Drawer created successfully
                    newDrawerID: hmDvY3SjhBXuaa7PIBjHcqzj
      description: 'Create a new Drawer associated with the logged in user. '
      tags:
        - Drawer Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drawer'
  /drawer/all:
    get:
      summary: Get all available drawers
      tags:
        - Drawer Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Drawer'
      operationId: get-drawer-all
      description: Get all drawers available to user (irrespective of job)
  '/drawer/{jobID}':
    parameters:
      - schema:
          type: string
        name: jobID
        in: path
        required: true
    get:
      summary: Get all drawers in the supplied Job
      tags:
        - Drawer Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Drawer'
      operationId: get-drawer-jobID
      description: Get a specific drawer by specified JobID
    delete:
      summary: ''
      operationId: delete-drawer-jobID
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: 'Delete an existing job. Note: Delete will only render the job invisible to the user. Administrators will still have visibility into deleted jobs. '
      tags:
        - Job Management
  /job:
    post:
      summary: Create a Job
      operationId: post-job
      responses:
        '200':
          description: OK
      description: Create a new Job
      tags:
        - Job Management
    delete:
      summary: Delete a Job
      operationId: delete-job
      responses:
        '200':
          description: OK
      description: Create a new job associated with the currently logged in user
      tags:
        - Job Management
  /job/all:
    get:
      summary: Get all Jobs
      tags:
        - Job Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
      operationId: get-job-all
      description: 'Get all jobs (active and inactive) for the logged in user. '
  /job/active:
    get:
      summary: Get Active Jobs
      tags:
        - Job Management
      responses:
        '200':
          description: OK
      operationId: get-job-active
      description: 'Get all the active jobs for the currently logged in user. '
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Job'
    post:
      summary: Mark Job as Active
      operationId: post-job-active
      responses:
        '200':
          description: OK
      description: 'Mark Job as Active. Requires Job ID to activate. '
      parameters:
        - schema:
            type: string
          in: query
          name: jobId
      tags:
        - Job Management
  /job/inactive:
    get:
      summary: Get all inactive jobs
      tags:
        - Job Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
              examples:
                Inactive Job list:
                  value:
                    - _id: string
                      Name: string
                      State: 0
                      creationDate: 0
                      lastUpdated: 0
                      securityAssociations:
                        - string
      operationId: get-job-inactive
      parameters: []
      description: Get all inactive Jobs
    post:
      summary: Mark job as inactive
      operationId: post-job-inactive
      responses:
        '200':
          description: OK
      tags:
        - Job Management
      description: 'Mark a job as inactive '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jobID:
                  type: string
  '/job/{JobID}':
    parameters:
      - schema:
          type: string
        name: JobID
        in: path
        required: true
    get:
      summary: Get Job Details for job by ID
      tags:
        - Job Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      operationId: get-job-JobID
      description: Get the job details for the supplied ID
  '/toolimage/upc/{toolUPC}':
    parameters:
      - schema:
          type: string
        name: toolUPC
        in: path
        required: true
    get:
      summary: Get specific tool or tools by UPC
      tags:
        - Tool Imaging
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tool'
      operationId: get-toolimage-toolUPC
      description: get tool by UPC (this endpoint is not currently documented correctly
  '/drawer/layout/{drawerId}':
    parameters:
      - schema:
          type: string
        name: drawerId
        in: path
        required: true
    get:
      summary: Get most recent saved layout
      tags:
        - Drawer Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layout'
      operationId: get-drawer-layout-drawerId
      description: 'Loads the most recent saved layout from the database without SVG data (referencing tool _id) for a specific drawer id. '
    post:
      summary: Save Drawer Layout
      operationId: post-drawer-layout-drawerId
      responses:
        '200':
          description: OK
      tags:
        - Drawer Management
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                layoutData:
                  $ref: '#/components/schemas/Layout'
      description: 'Save the drawer layout data to the provided drawerID. '
  /logout:
    get:
      summary: Logout
      tags:
        - Authentication
      responses:
        '200':
          description: OK
      operationId: get-logout
      description: 'Logs user out, destroys current session and API token. '
  /drawer/revision:
    post:
      summary: Create a Drawer Revision
      operationId: post-drawer-revision
      responses:
        '200':
          description: OK
      description: 'Post a revision formatted layout to create it as the current highest numbered revision for the drawer. '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revision'
      tags:
        - Drawer Management
  '/drawer/revision/{revisionID}':
    parameters:
      - schema:
          type: string
        name: revisionID
        in: path
        required: true
    get:
      summary: View a Drawer Revision
      tags:
        - Drawer Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      operationId: get-drawer-revision-revisionID
      description: 'View the specified Drawer Revision. This is not editable. '
components:
  schemas:
    User:
      title: User
      type: object
      x-examples:
        Basic User:
          id: 102
          fullName: Tom Petty
          title: Purchasing
          contactNumber: 800-867-5309
          securityRole: 22
          availableBrands:
            - 101
            - 102
            - 103
        BasicUser with preferences:
          id: 102
          fullName: Tom Petty
          title: Purchasing
          contactNumber: 800-867-5309
          securityRole: 22
          availableBrands:
            - 101
            - 102
            - 103
          preferences:
            pageSize: 25
            rememberMe: true
      description: 'User object used in multiple calls. Describes permissions, brand availability, and preferences for a user. '
      x-tags:
        - Models
      properties:
        id:
          type: integer
        fullName:
          type: string
        title:
          type: string
        contactNumber:
          type: string
        securityRole:
          type: integer
        availableBrands:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
        preferences:
          type: object
          description: 'If the user has set any UI preferences that should persist between browsers they will save here. '
          properties:
            pageSize:
              type: integer
              description: 'When getting any list of items from the API, how big should the page size be (pagination)'
            rememberMe:
              type: boolean
              description: If we should save the username in cookies (remember me checkbox)
      required:
        - id
    Brand:
      title: Brand
      type: object
      x-examples:
        Brand:
          brandID: 100
          brandName: SK
          brandImage: /resources/brands/logo/small/sk.png
      properties:
        brandID:
          type: integer
        brandName:
          type: string
        brandLogo:
          type: string
        active:
          type: boolean
          default: true
          description: 'If a brand is added and is not active, parts associated with that brand will not be visible to all users'
      x-tags:
        - Models
      description: Depricated - Being removed
    Tool:
      title: Tool
      type: object
      x-examples:
        Small Screwdriver:
          _id:
            $oid: 5f714af2668a68303229bd72
          Brand: SK
          UPC: '85310'
          isSet: false
          Description: Small Screwdriver
          Category: Screwdrivers & Nut Drivers
          Unit: NA
          toolThickness: '1.125'
          DisplaySVG: "<svg xmlns=\"http://www.w3.org/2000/svg\">\r\n </svg>\r\n"
          CutSVG: "<svg xmlns=\"http://www.w3.org/2000/svg\">\r\n </svg>\r\n"
          importDate: '1601766752'
      x-tags:
        - Models
      properties:
        _id:
          type: object
          description: Autogenerated MongoDB _id property
          properties:
            $oid:
              type: string
        Brand:
          type: string
        UPC:
          type: string
        isSet:
          type: boolean
        Description:
          type: string
        Category:
          type: string
        Unit:
          type: string
        toolThickness:
          type: string
        DisplaySVG:
          type: string
        CutSVG:
          type: string
        importDate:
          type: integer
        SecurityAssociations:
          type: array
          description: Private Property
          items:
            type: string
      required:
        - _id
        - Brand
        - UPC
    Job:
      title: Job
      type: object
      description: 'Jobs contain drawers and are part of the production process. '
      properties:
        _id:
          type: string
        Name:
          type: string
        State:
          type: integer
        creationDate:
          type: integer
        lastUpdated:
          type: integer
        securityAssociations:
          type: array
          items:
            type: string
      x-tags:
        - Models
    Drawer:
      title: Drawer
      type: object
      x-tags:
        - Models
      x-examples:
        example-1:
          _id: string
          density: 0
          drawerNotes: string
          foamColor: string
          foamThickness: string
          height: string
          name: string
          padColor: string
          padThickness: string
          parentJobID: string
          plasticTray: string
          plasticTrayColor: string
          plasticTrayThickness: string
          width: string
          securityAssociations:
            - string
          revisions:
            - '0': linked_saved_id
              '1': more_recent_saved_id
      properties:
        _id:
          type: string
          description: System Generated
        density:
          type: integer
          description: Foam Density Required
        drawerNotes:
          type: string
          description: Customer notes on Drawer
        foamColor:
          type: string
        foamThickness:
          type: string
        height:
          type: string
        name:
          type: string
        padColor:
          type: string
        padThickness:
          type: string
        parentJobID:
          type: string
        plasticTray:
          type: string
        plasticTrayColor:
          type: string
        plasticTrayThickness:
          type: string
        width:
          type: string
        securityAssociations:
          type: array
          description: System Generated
          items:
            type: string
        revisions:
          type: array
          description: System Generated (not available for Drawer Creation)
          items:
            type: object
            properties:
              revName:
                type: string
    Layout:
      title: Layout
      description: 'A layout is what we refer to as the contents of the drawer. Within each layout we will have the tools in the positions the customer has placed them. We will also have the ability to make the layout no longer editable by turning it into a revision. Revisions will be available in the Revisions collection / Model '
      type: object
      x-examples:
        Example Layout - two tools:
          toolData:
            - toolID: 5f72536c574def1e594fb992
              uniqueIdString: 6mhr8k4i8-5f72536c574def1e594fb992-0
              toolHeightPx: 46.4
              konvToolHeightPx: 46.4
              toolOriginalHeightIn: 1.1601099967956543
              toolWidthPx: 151.56
              konvToolWidthPx: 151.56
              toolOriginalWidthIn: 3.7888100147247314
              toolTransformer: '{"attrs":{"centeredScaling":true,"rotationSnaps":[0,45,90,135,180,225,270,315],"resizeEnabled":false,"anchorStroke":"#00a9f4","anchorFill":"#00a9f4","anchorSize":6,"borderStroke":"#00a9f4","rotateAnchorOffset":16,"anchorCornerRadius":1},"className":"Transformer"}'
              isUserTool: true
              toolScale: 1
              konvToolXPosPercent: 60.625
              konvToolXPosPx: 485
              konvToolYPosPercent: 59.4
              konvToolYPosPx: 297
              konvToolRPosDegree: 1
              konvToolScaleX: 1
              konvToolScaleY: 1
              isImgPathData: false
            - toolID: 5f73f26ef9ed54382304aa02
              uniqueIdString: 6mhr8k4i8-5f73f26ef9ed54382304aa02-0
              toolHeightPx: 136.4
              konvToolHeightPx: 136.4
              toolOriginalHeightIn: 3.4100000858306885
              toolWidthPx: 505.24
              konvToolWidthPx: 505.24
              toolOriginalWidthIn: 12.631290435791016
              toolTransformer: '{"attrs":{"centeredScaling":true,"rotationSnaps":[0,45,90,135,180,225,270,315],"resizeEnabled":false,"anchorStroke":"#00a9f4","anchorFill":"#00a9f4","anchorSize":6,"borderStroke":"#00a9f4","rotateAnchorOffset":16,"anchorCornerRadius":1},"className":"Transformer"}'
              isUserTool: true
              toolScale: 1
              konvToolXPosPercent: 59.625
              konvToolXPosPx: 477
              konvToolYPosPercent: 81.4
              konvToolYPosPx: 407
              konvToolRPosDegree: 0
              konvToolScaleX: 1
              konvToolScaleY: 1
              isImgPathData: false
          svgStringFullOuter: |-
            <svg xmlns="http://www.w3.org/2000/svg" width="3.74885in" height="1.11125in" viewBox="0 0 269.91718 80.0102">
             <path d="M1171.96945,1089.07059v18.58934a37.52556,37.52556,0,0,1-4.68916.89688c-4.778.29677-9.57364.336-14.34657.68842a153.3711,153.3711,0,0,1-40.48142-2.02688c-20.65794-3.96266-41.668-3.966-62.60925-4.42345-4.978-.1087-5.831.84345-6.01994,5.92513-.19268,5.183-.13369,10.37674-.398,15.55491a34.69851,34.69851,0,0,1-1.20008,7.04066c-.56671,2.14192-1.99025,3.02433-4.46381,2.96351-5.15076-.12667-10.31454.35459-15.47027.30671a12.67058,12.67058,0,0,1-5.68991-1.32844c-7.592-4.08005-15.32386-4.16609-23.11-1.00521-4.77834,1.93981-9.51494,1.99829-14.60518,1.76387-20.90435-.9623-41.829-1.53267-62.75171-1.9912-2.78173-.0611-4.51279-.822-5.94809-2.984a43.21206,43.21206,0,0,1-6.82634-17.73594c-1.88894-12.74175-1.9037-25.52458,1.1009-38.06159,1.279-5.33679,3.99387-10.34948,6.24792-15.42429,1.16332-2.61924,3.21446-3.43923,6.31767-3.20076a474.708,474.708,0,0,0,67.54766.72508,23.23235,23.23235,0,0,1,11.05945,1.79369c6.85353,2.95749,13.80566,3.39095,20.92124.382,2.04346-.8641,4.61979-.721,6.93663-.634,5.14748.19326,10.28121.81257,15.42831.934,4.02677.095,5.10654.4105,5.37948,4.50689.35671,5.35368.10131,10.75512-.02836,16.13266-.25269,10.479-.1573,10.78056,10.455,10.80008q25.42458.04692,50.84917-.34107a70.88961,70.88961,0,0,0,12.4824-1.3128c13.56123-2.64365,27.04541-.44712,40.5527.3312C1162.9474,1088.18584,1167.27166,1088.66469,1171.96945,1089.07059Z" transform="translate(-902.05227 -1054.57899)"></path>
            </svg>
      properties:
        toolData:
          type: array
          items:
            type: object
            properties:
              toolID:
                type: string
              uniqueIdString:
                type: string
              toolHeightPx:
                type: number
              konvToolHeightPx:
                type: number
              toolOriginalHeightIn:
                type: number
              toolWidthPx:
                type: number
              konvToolWidthPx:
                type: number
              toolOriginalWidthIn:
                type: number
              toolTransformer:
                type: string
              isUserTool:
                type: boolean
              toolScale:
                type: number
              konvToolXPosPercent:
                type: number
              konvToolXPosPx:
                type: number
              konvToolYPosPercent:
                type: number
              konvToolYPosPx:
                type: number
              konvToolRPosDegree:
                type: number
              konvToolScaleX:
                type: number
              konvToolScaleY:
                type: number
              isImgPathData:
                type: boolean
        svgStringFullOuter:
          type: string
      x-tags:
        - Models
    Revision:
      title: Revision
      type: object
      description: 'A revision is a saved copy of a Layout. These are not editable and are able to be cut. '
      x-examples:
        Example Revision:
          _id: pbMzf5oT2XfOTCcQw73EX4kn
          name: BigJob-Rev1
          notes: 'Minor update to finger pockets, ready to cut'
          jobID: 6A7YQ6TeEMz6dQOT7NNw20d5
          createdBy: klzuU5z5xYeJh7uShBY5pYl5
          createdAt: 1601791478
          revCount: 1
          svgData: |-
            <svg xmlns="http://www.w3.org/2000/svg" width="3.74885in" height="1.11125in" viewBox="0 0 269.91718 80.0102">
             <path d="M1171.96945,1089.07059v18.58934a37.52556,37.52556,0,0,1-4.68916.89688c-4.778.29677-9.57364.336-14.34657.68842a153.3711,153.3711,0,0,1-40.48142-2.02688c-20.65794-3.96266-41.668-3.966-62.60925-4.42345-4.978-.1087-5.831.84345-6.01994,5.92513-.19268,5.183-.13369,10.37674-.398,15.55491a34.69851,34.69851,0,0,1-1.20008,7.04066c-.56671,2.14192-1.99025,3.02433-4.46381,2.96351-5.15076-.12667-10.31454.35459-15.47027.30671a12.67058,12.67058,0,0,1-5.68991-1.32844c-7.592-4.08005-15.32386-4.16609-23.11-1.00521-4.77834,1.93981-9.51494,1.99829-14.60518,1.76387-20.90435-.9623-41.829-1.53267-62.75171-1.9912-2.78173-.0611-4.51279-.822-5.94809-2.984a43.21206,43.21206,0,0,1-6.82634-17.73594c-1.88894-12.74175-1.9037-25.52458,1.1009-38.06159,1.279-5.33679,3.99387-10.34948,6.24792-15.42429,1.16332-2.61924,3.21446-3.43923,6.31767-3.20076a474.708,474.708,0,0,0,67.54766.72508,23.23235,23.23235,0,0,1,11.05945,1.79369c6.85353,2.95749,13.80566,3.39095,20.92124.382,2.04346-.8641,4.61979-.721,6.93663-.634,5.14748.19326,10.28121.81257,15.42831.934,4.02677.095,5.10654.4105,5.37948,4.50689.35671,5.35368.10131,10.75512-.02836,16.13266-.25269,10.479-.1573,10.78056,10.455,10.80008q25.42458.04692,50.84917-.34107a70.88961,70.88961,0,0,0,12.4824-1.3128c13.56123-2.64365,27.04541-.44712,40.5527.3312C1162.9474,1088.18584,1167.27166,1088.66469,1171.96945,1089.07059Z" transform="translate(-902.05227 -1054.57899)"></path>
            </svg>
      properties:
        _id:
          type: string
        name:
          type: string
        notes:
          type: string
          description: ''
        jobID:
          type: string
        createdBy:
          type: string
        createdAt:
          type: number
        revCount:
          type: number
        svgData:
          type: string
      x-tags:
        - Models
  securitySchemes:
    Bearer Token:
      name: apiKey
      type: apiKey
      in: header
      description: Your unique authentication token provided by the login method
tags:
  - name: Tool Imaging
  - name: Drawer Management
  - name: Job Management
  - name: Authentication
  - name: Layout
